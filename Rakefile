#
# generated by pdf4kindle
#

SRC = '97things.pdf'
LEVEL = '0%,100%'
TOP = 10
BOTTOM = 110
LEFT = 10
RIGHT = 10

PGM_DIR = './pgm'; directory PGM_DIR
JPG_DIR = './jpg'; directory JPG_DIR
PDF_DIR = './pdf'; directory PDF_DIR

DST = SRC.sub( /\.pdf$/, '.out.pdf' )

def count_pages
	open( "|pdfinfo #{SRC}", 'r:utf-8', &:read ).scan( /Pages:\s*(\d+)/ ).flatten[0].to_i
end

def image_list( dir, ext, count )
	[].tap do |l|
		1.upto( count ) do |i|
			l << "#{dir}/tmp-#{'%03d' % i}.#{ext}"
		end
	end
end

def pgm2jpg( pgm, jpg )
	sh "convert #{pgm} -level '#{LEVEL}' \
		-chop #{LEFT}x#{TOP} \
		-gravity SouthEast -chop #{RIGHT}x#{BOTTOM}\
		-gravity NorthWest -fuzz 50% -trim -quality 0 #{jpg}"
end

pages = count_pages
pgms = image_list( PGM_DIR, 'pgm', pages )
jpgs = image_list( JPG_DIR, 'jpg', pages )

jpgs.each_with_index do |jpg, i|
	file jpgs[i] => [JPG_DIR, pgms[i]] do |t|
		pgm2jpg( t.prerequisites[1], t.name )
	end

	file pgms[i] => [PGM_DIR, SRC] do
		unless File::exist?( pgms[-1] ) then
			sh "pdftoppm -gray #{SRC} #{PGM_DIR}/tmp"
		end
	end
end

task :default => :pdf

desc 'generate pdf file by concat all jpg files.'
task :pdf => DST

file DST => [PDF_DIR, 'metadata.txt'] + jpgs do
	pdf_list = []
	i = 0
	src_jpgs = jpgs[i, 50]
	while src_jpgs do
		pdf_list << "#{PDF_DIR}/#{i}.pdf"
		sh "convert #{src_jpgs.join ' '} #{pdf_list[-1]}"
		src_jpgs = jpgs[i += 50, 50]
	end
	sh "pdftk #{pdf_list.join ' '} cat output #{PDF_DIR}/#{DST}"
	sh "pdftk #{PDF_DIR}/#{DST} update_info metadata.txt output #{DST}" 
end

desc 'generate metadata file from source pdf.'
task :metadata => 'metadata.txt'

file 'metadata.txt' => SRC do |t|
	sh "pdftk #{t.prerequisites.join ' '} dump_data output ./#{t.name}"
end

desc 'crop pgm files to jpg files.'
task :jpg => [JPG_DIR] + jpgs

rule '.jpg' => '.pgm' do |t|
	pgm2jpg( t.prerequisites[0], t.name )
end

desc 'extract image files from source pdf.'
task :pgm => [PGM_DIR, SRC] + pgms do
	sh "pdftoppm -gray #{SRC} #{PGM_DIR}/tmp"
end

desc 'cleanap pgm images.'
task 'clean-pgm' do
	begin
		rm pgms
	rescue
	end
end

desc 'cleanap jpg images.'
task 'clean-jpg' do
	begin
		rm jpgs
	rescue
	end
end

desc 'cleanap temporaly pdf files.'
task 'clean-pdf' do
	rm FileList["#{PDF_DIR}/*.pdf"]
end

desc 'cleanap all tmp files.'
task :clean => ['clean-jpg', 'clean-pgm', 'clean-pdf'] do
	rm 'metadata.txt'
	rmdir PGM_DIR
	rmdir JPG_DIR
	rmdir PDF_DIR
end

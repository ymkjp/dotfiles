# =====
# https://gist.github.com/4117588
# =====
[core]
  # http://stackoverflow.com/questions/136178/git-diff-handling-long-lines
  pager = less -R
	editor = vim
	autocrlf = input
[pager]
    log = diff-highlight | less -R
    show = diff-highlight | less -R
    diff = diff-highlight | less -R
[diff]
  compactionHeuristic = true
[color]
    ui = auto
[branch]
    autosetuprebase = always
[merge]
    tool = idea
    ff = false
[pull]
    rebase = true
[alias]
    # http://oli.jp/2012/git-powerup/
    # http://blog.blindgaenger.net/advanced_git_aliases.html
    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
    b = branch
    br = browse-remote
    ci = commit
    co = checkout
    coo = !git branch --sort=-authordate | grep -v -e '->' -e '*' | peco | xargs -I{} git checkout {}
    cb = checkout -b
    col = checkout @{-1}
    d = diff
    dc = diff --cached
    f = fetch --prune
    fs = !git f && git su
    ignore = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >> .gitignore
    info = remote show origin
    l = log --graph -n 20 --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset'
    ll = log --stat --abbrev-commit
    ln = log --graph -n 20 --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset' --name-status
    lp = log --oneline -n 20 -p
    ls = log --stat --abbrev-commit -n 1 # display previous log
    s = status --short --branch
    sb = show-branch
    st = status
    su = submodule update --init --recursive
    sp = git submodule foreach 'git checkout master && git pull origin master'

[browse-remote "github.com"]
    rev = https://{host}/{path}/commit/{commit}
    file = "https://{host}/{path}/blob/{short_rev}/{file}{line && \"#L%d\" % line}"
    top = https://{host}/{path}
    ref = https://{host}/{path}/tree/{short_ref}

# http://yuroyoro.hatenablog.com/entry/20120211/1328930819
[tig "bind"]
    generic = g move-first-line
    generic = G move-last-line
[ghq]
  root = ~/src
[ghq "github.com"]
  vcs = git
[ghq "ssh://git@bitbucket.org"]
  vcs = git

[credential]
	helper = osxkeychain
[rebase]
	autosquash = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
# IntelliJ mergetool config
[mergetool "idea"]
    cmd = idea merge $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE") $(cd $(dirname "$BASE") && pwd)/$(basename "$BASE") $(cd $(dirname "$MERGED") && pwd)/$(basename "$MERGED")
    trustExitCode = true
[difftool "idea"]
    cmd = idea diff $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE")
[user]
	name = Kenta Yamamoto
	email = lq33xxx@gmail.com
[commit]
	template = ~/.stCommitMsg
	gpgsign = true
[include]
    path = ~/.gitconfig.local
[init]
	defaultBranch = main
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
